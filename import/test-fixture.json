[{"pk": 1, "model": "auth.user", "fields": {"username": "user-1", "first_name": "Community", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-04-05 22:48:00", "groups": [], "user_permissions": [], "password": "", "email": "no.me@nowhere.com", "date_joined": "2011-04-05 22:48:00"}}, {"pk": 2, "model": "auth.user", "fields": {"username": "user2", "first_name": "Istvan Albert", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-04-05 22:48:00", "groups": [], "user_permissions": [], "password": "", "email": "no.me@nowhere.com", "date_joined": "2011-04-05 22:48:00"}}, {"pk": 3, "model": "auth.user", "fields": {"username": "user3", "first_name": "Fabio", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-04-05 22:48:00", "groups": [], "user_permissions": [], "password": "", "email": "no.me@nowhere.com", "date_joined": "2011-04-05 22:48:00"}}, {"pk": 4, "model": "auth.user", "fields": {"username": "user4", "first_name": "Jason", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-04-05 22:48:00", "groups": [], "user_permissions": [], "password": "", "email": "no.me@nowhere.com", "date_joined": "2011-04-05 22:48:00"}}, {"pk": 5, "model": "auth.user", "fields": {"username": "user5", "first_name": "Zhenhai Zhang", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-04-05 22:48:00", "groups": [], "user_permissions": [], "password": "", "email": "no.me@nowhere.com", "date_joined": "2011-04-05 22:48:00"}}, {"pk": 6, "model": "auth.user", "fields": {"username": "user6", "first_name": "Tom Koerber", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-04-05 22:48:00", "groups": [], "user_permissions": [], "password": "", "email": "no.me@nowhere.com", "date_joined": "2011-04-05 22:48:00"}}, {"pk": 7, "model": "auth.user", "fields": {"username": "user7", "first_name": "suk211", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-04-05 22:48:00", "groups": [], "user_permissions": [], "password": "", "email": "no.me@nowhere.com", "date_joined": "2011-04-05 22:48:00"}}, {"pk": 8, "model": "auth.user", "fields": {"username": "user8", "first_name": "lemon", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-04-05 22:48:00", "groups": [], "user_permissions": [], "password": "", "email": "no.me@nowhere.com", "date_joined": "2011-04-05 22:48:00"}}, {"pk": 9, "model": "auth.user", "fields": {"username": "user9", "first_name": "Wubin Qu", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-04-05 22:48:00", "groups": [], "user_permissions": [], "password": "", "email": "no.me@nowhere.com", "date_joined": "2011-04-05 22:48:00"}}, {"pk": 10, "model": "auth.user", "fields": {"username": "user10", "first_name": "Question Bot", "last_name": "", "is_active": true, "is_superuser": false, "is_staff": false, "last_login": "2011-04-05 22:48:00", "groups": [], "user_permissions": [], "password": "", "email": "no.me@nowhere.com", "date_joined": "2011-04-05 22:48:00"}}, {"pk": 1, "model": "server.userprofile", "fields": {"bronze_badges": 2, "last_visited": "2011-04-05 22:48:03", "json": "", "silver_badges": 0, "gold_badges": 0, "score": 1, "user": 1, "creation_date": "2011-04-05 22:48:00"}}, {"pk": 2, "model": "server.userprofile", "fields": {"bronze_badges": 7, "last_visited": "2011-04-05 22:48:03", "json": "", "silver_badges": 0, "gold_badges": 0, "score": 1438, "user": 2, "creation_date": "2011-04-05 22:48:00"}}, {"pk": 3, "model": "server.userprofile", "fields": {"bronze_badges": 1, "last_visited": "2011-04-05 22:48:03", "json": "", "silver_badges": 0, "gold_badges": 0, "score": 41, "user": 3, "creation_date": "2011-04-05 22:48:00"}}, {"pk": 4, "model": "server.userprofile", "fields": {"bronze_badges": 4, "last_visited": "2011-04-05 22:48:03", "json": "", "silver_badges": 0, "gold_badges": 0, "score": 130, "user": 4, "creation_date": "2011-04-05 22:48:00"}}, {"pk": 5, "model": "server.userprofile", "fields": {"bronze_badges": 2, "last_visited": "2011-04-05 22:48:03", "json": "", "silver_badges": 0, "gold_badges": 0, "score": 51, "user": 5, "creation_date": "2011-04-05 22:48:00"}}, {"pk": 6, "model": "server.userprofile", "fields": {"bronze_badges": 1, "last_visited": "2011-04-05 22:48:03", "json": "", "silver_badges": 0, "gold_badges": 0, "score": 51, "user": 6, "creation_date": "2011-04-05 22:48:00"}}, {"pk": 7, "model": "server.userprofile", "fields": {"bronze_badges": 5, "last_visited": "2011-04-05 22:48:03", "json": "", "silver_badges": 0, "gold_badges": 0, "score": 249, "user": 7, "creation_date": "2011-04-05 22:48:00"}}, {"pk": 8, "model": "server.userprofile", "fields": {"bronze_badges": 0, "last_visited": "2011-04-05 22:48:00", "json": "", "silver_badges": 0, "gold_badges": 0, "score": 1, "user": 8, "creation_date": "2011-04-05 22:48:00"}}, {"pk": 9, "model": "server.userprofile", "fields": {"bronze_badges": 0, "last_visited": "2011-04-05 22:48:00", "json": "", "silver_badges": 0, "gold_badges": 0, "score": 1, "user": 9, "creation_date": "2011-04-05 22:48:00"}}, {"pk": 10, "model": "server.userprofile", "fields": {"bronze_badges": 6, "last_visited": "2011-04-05 22:48:03", "json": "", "silver_badges": 0, "gold_badges": 0, "score": 286, "user": 10, "creation_date": "2011-04-05 22:48:00"}}, {"pk": 1, "model": "server.tag", "fields": {"count": 1, "name": "test"}}, {"pk": 2, "model": "server.tag", "fields": {"count": 0, "name": "start"}}, {"pk": 3, "model": "server.tag", "fields": {"count": 1, "name": "bed"}}, {"pk": 4, "model": "server.tag", "fields": {"count": 1, "name": "gff"}}, {"pk": 5, "model": "server.tag", "fields": {"count": 4, "name": ""}}, {"pk": 6, "model": "server.tag", "fields": {"count": 1, "name": "galaxy"}}, {"pk": 7, "model": "server.tag", "fields": {"count": 1, "name": "yeast"}}, {"pk": 8, "model": "server.tag", "fields": {"count": 1, "name": "motif"}}, {"pk": 9, "model": "server.tag", "fields": {"count": 1, "name": "microarray"}}, {"pk": 10, "model": "server.tag", "fields": {"count": 1, "name": "clustering"}}, {"pk": 11, "model": "server.tag", "fields": {"count": 0, "name": "python"}}, {"pk": 12, "model": "server.tag", "fields": {"count": 0, "name": "dinucleotide"}}, {"pk": 13, "model": "server.tag", "fields": {"count": 1, "name": "guidelines"}}, {"pk": 14, "model": "server.tag", "fields": {"count": 1, "name": "nucleotides"}}, {"pk": 1, "model": "server.post", "fields": {"revision_count": 4, "lastedit_date": "2010-02-26 14:10:59", "author": 2, "title": "Site use guidelines", "tag_string": "guidelines", "views": 70, "tag_set": [13], "creation_date": "2009-09-30 14:12:07", "content": "Here are a few guidelines:\n\n 1. The site's goal is to answer bioinformatics and systems biology related questions\n 2. Answer questions to gain *reputation*. \n 3. Don't forget to vote for answers that you like! Registered users may vote on answers.\n 4. If you are the one asking the original question you may also select the best answer\n 5. Subscribe to the RSS feeds for all questions or a single question to keep up to date with the developments", "comment_count": 0, "html": "<p>Here are a few guidelines:</p>\n<ol>\n<li>The site's goal is to answer bioinformatics and systems biology related questions</li>\n<li>Answer questions to gain <em>reputation</em>. </li>\n<li>Don't forget to vote for answers that you like! Registered users may vote on answers.</li>\n<li>If you are the one asking the original question you may also select the best answer</li>\n<li>Subscribe to the RSS feeds for all questions or a single question to keep up to date with the developments</li>\n</ol>", "lastedit_user": 2, "score": 1}}, {"pk": 2, "model": "server.post", "fields": {"revision_count": 2, "lastedit_date": "2009-09-30 15:09:43", "author": 2, "title": "How do I convert from BED format to GFF format?", "tag_string": "bed gff galaxy", "views": 187, "tag_set": [3, 4, 6], "creation_date": "2009-09-30 14:55:00", "content": "I have a file in GFF format and I need to convert it to BED format. What do I do?", "comment_count": 1, "html": "<p>I have a file in GFF format and I need to convert it to BED format. What do I do?</p>", "lastedit_user": 2, "score": 0}}, {"pk": 3, "model": "server.post", "fields": {"revision_count": 2, "lastedit_date": "2009-09-30 19:46:25", "author": 2, "title": "", "tag_string": "", "views": 0, "tag_set": [5], "creation_date": "2009-09-30 14:56:18", "content": "Both formats are tab delimited text files used to represent DNA features in genomes. The order of columns between the two are different, there are also columns that correspond to attributes missing from one or the other format. Nonetheless **the most important** difference between the two is the coordinate systems that they assume. \n\nThe [BED](http://genome.ucsc.edu/FAQ/FAQformat#format1) format developed at `UCSC` uses a zero based indexing and an open end interval whereas the [GFF](http://www.sanger.ac.uk/Software/formats/GFF/GFF_Spec.shtml) format developed at `Sanger` assumes a 1 based coordinate system that includes both start and end coordinates. Therefore\n\nThe `[0,100]` interval in `BED` format corresponds to `[1,100]` in `GFF` format and both are `100` base long. That the first element in BED format will be have the index of `0` where the last `100th` element will have the index of `99`! Whereas in `GFF` the first element will have the index of `1` and the last element will have the index of `100`.\n\nTo convert between the two you may use [Galaxy](http://wwwportalmlekozyjestart.g2.bx.psu.edu/) and select the section called `Select Formats` that will list various transformation options.", "comment_count": 0, "html": "<p>Both formats are tab delimited text files used to represent DNA features in genomes. The order of columns between the two are different, there are also columns that correspond to attributes missing from one or the other format. Nonetheless <strong>the most important</strong> difference between the two is the coordinate systems that they assume. </p>\n<p>The <a href=\"http://genome.ucsc.edu/FAQ/FAQformat#format1\">BED</a> format developed at <code>UCSC</code> uses a zero based indexing and an open end interval whereas the <a href=\"http://www.sanger.ac.uk/Software/formats/GFF/GFF_Spec.shtml\">GFF</a> format developed at <code>Sanger</code> assumes a 1 based coordinate system that includes both start and end coordinates. Therefore</p>\n<p>The <code>[0,100]</code> interval in <code>BED</code> format corresponds to <code>[1,100]</code> in <code>GFF</code> format and both are <code>100</code> base long. That the first element in BED format will be have the index of <code>0</code> where the last <code>100th</code> element will have the index of <code>99</code>! Whereas in <code>GFF</code> the first element will have the index of <code>1</code> and the last element will have the index of <code>100</code>.</p>\n<p>To convert between the two you may use <a href=\"http://wwwportalmlekozyjestart.g2.bx.psu.edu/\">Galaxy</a> and select the section called <code>Select Formats</code> that will list various transformation options.</p>", "lastedit_user": 2, "score": 0}}, {"pk": 4, "model": "server.post", "fields": {"revision_count": 1, "lastedit_date": "2009-09-30 16:09:06", "author": 3, "title": "Finding common motifs in sequences", "tag_string": "yeast motif", "views": 150, "tag_set": [7, 8], "creation_date": "2009-09-30 16:09:06", "content": "I have a few hundred yeast sequences (20-80bp long) and I want to find common motifs (conserved bases at certain indices) in them. I am using a Mac", "comment_count": 0, "html": "<p>I have a few hundred yeast sequences (20-80bp long) and I want to find common motifs (conserved bases at certain indices) in them. I am using a Mac</p>", "lastedit_user": 3, "score": 1}}, {"pk": 5, "model": "server.post", "fields": {"revision_count": 4, "lastedit_date": "2009-10-05 16:10:10", "author": 2, "title": "Recommend easy to use microarray clustering software", "tag_string": "microarray clustering", "views": 154, "tag_set": [9, 10], "creation_date": "2009-09-30 16:44:22", "content": "Feel free to post your favorite clustering tool.", "comment_count": 0, "html": "<p>Feel free to post your favorite clustering tool.</p>", "lastedit_user": 2, "score": 1}}, {"pk": 6, "model": "server.post", "fields": {"revision_count": 2, "lastedit_date": "2009-09-30 18:57:55", "author": 5, "title": "test by zhenhai", "tag_string": "test", "views": 2, "tag_set": [1], "creation_date": "2009-09-30 18:49:39", "content": "Hi, I just created my user id a few minutes ago. \n\nPost this question to see how it works.", "comment_count": 0, "html": "<p>Hi, I just created my user id a few minutes ago. </p>\n<p>Post this question to see how it works.</p>", "lastedit_user": 2, "score": 0}}, {"pk": 7, "model": "server.post", "fields": {"revision_count": 1, "lastedit_date": "2009-09-30 18:55:02", "author": 5, "title": "", "tag_string": "", "views": 0, "tag_set": [5], "creation_date": "2009-09-30 18:55:02", "content": "try this out?\n\nhttp://fraenkel.mit.edu/webmotifs/form.html", "comment_count": 0, "html": "<p>try this out?</p>\n<p>http://fraenkel.mit.edu/webmotifs/form.html</p>", "lastedit_user": 5, "score": 1}}, {"pk": 8, "model": "server.post", "fields": {"revision_count": 1, "lastedit_date": "2009-09-30 19:32:29", "author": 6, "title": "", "tag_string": "", "views": 0, "tag_set": [5], "creation_date": "2009-09-30 19:32:29", "content": "You can also use MEME:  http://meme.sdsc.edu/.", "comment_count": 0, "html": "<p>You can also use MEME:  http://meme.sdsc.edu/.</p>", "lastedit_user": 6, "score": 2}}, {"pk": 9, "model": "server.post", "fields": {"revision_count": 2, "lastedit_date": "2009-10-01 01:09:51", "author": 7, "title": "", "tag_string": "", "views": 0, "tag_set": [5], "creation_date": "2009-09-30 19:35:28", "content": "<pre>\nACGGGCCCGACGATGCGTCGTA\n\nACGTACGTCGAACCGTCGTCGT\n\nACGTGCGTCGAAACGTCAGTCG\n\nACGGGTTCGATCGTCGTCGTCG\n</pre>\n may be in Python I will break down the first sequence of required motif length into a sliding window and will search for those list of motifs in the rest of sequences using regular expression in python using `re.search()` method.", "comment_count": 1, "html": "<pre>\nACGGGCCCGACGATGCGTCGTA\n\nACGTACGTCGAACCGTCGTCGT\n\nACGTGCGTCGAAACGTCAGTCG\n\nACGGGTTCGATCGTCGTCGTCG\n</pre>\n may be in Python I will break down the first sequence of required motif length into a sliding window and will search for those list of motifs in the rest of sequences using regular expression in python using `re.search()` method.", "lastedit_user": 2, "score": 0}}, {"pk": 10, "model": "server.post", "fields": {"revision_count": 3, "lastedit_date": "2009-10-13 14:53:15", "author": 10, "title": "How to generate multi-nucleotide occupancy counts for each coordinate of my reads?", "tag_string": "nucleotides", "views": 18, "tag_set": [14], "creation_date": "2009-10-05 15:51:37", "content": "I need to generate nucleotide occupancy counts for each position of a given sequence then summed over each of the input sequences. An example desired output (for di-nucleotide AT):\n\n![dinucleotide occupancy][1]\n\n\n  [1]: http://github.com/ialbert/biostar-codesample/raw/master/python/images/dinuc.png", "comment_count": 0, "html": "<p>I need to generate nucleotide occupancy counts for each position of a given sequence then summed over each of the input sequences. An example desired output (for di-nucleotide AT):</p>\n<p><img alt=\"dinucleotide occupancy\" src=\"http://github.com/ialbert/biostar-codesample/raw/master/python/images/dinuc.png\" /></p>", "lastedit_user": 2, "score": 2}}, {"pk": 11, "model": "server.post", "fields": {"revision_count": 0, "lastedit_date": "2011-04-05 22:48:03", "author": 2, "title": "", "tag_string": "", "views": 0, "tag_set": [], "creation_date": "2009-09-30 14:56:48", "content": "Original body not yet available!", "comment_count": 0, "html": "I'll answer my own question here as it is a demo for now", "lastedit_user": 2, "score": 0}}, {"pk": 12, "model": "server.post", "fields": {"revision_count": 0, "lastedit_date": "2011-04-05 22:48:03", "author": 2, "title": "", "tag_string": "", "views": 0, "tag_set": [], "creation_date": "2009-09-30 19:43:58", "content": "Original body not yet available!", "comment_count": 0, "html": "post the python code as well (put it into pre tags then it will be shown nicely formatted, see help on the right)", "lastedit_user": 2, "score": 0}}, {"pk": 1, "model": "server.postrevision", "fields": {"author": 2, "tag_string": "test", "title": "You can ask any question here, as long as it is data analysis related.", "content": "This is the first question, more of a test rather than actual content.", "date": "2009-09-30 14:12:07", "post": 1}}, {"pk": 2, "model": "server.postrevision", "fields": {"author": 2, "tag_string": "test start", "title": "You can ask any question here, as long as it is data analysis related.", "content": "This is the first question, more of a test rather than actual content.\n\nHopefully we will be able to jump start the system to contain more useful information.", "date": "2009-09-30 14:18:11", "post": 1}}, {"pk": 3, "model": "server.postrevision", "fields": {"author": 2, "tag_string": "bed gff", "title": "How do I convert from BED format to GFF format?", "content": "I have a file in GFF format and I need to convert it to BED format. What do I do?", "date": "2009-09-30 14:55:00", "post": 2}}, {"pk": 4, "model": "server.postrevision", "fields": {"author": 2, "tag_string": "", "title": "", "content": "Both formats are tab delimited text files used to represent DNA features in genomes. The order of columns between the two are different, there are also columns that correspond to attributes missing from one or the other format. Nonetheless **the most important** difference between the two is the coordinate systems that they assume. \n\nThe [BED](http://genome.ucsc.edu/FAQ/FAQformat#format1) format developed at `UCSC` uses a zero based indexing and an open end interval whereas the [GFF](http://www.sanger.ac.uk/Software/formats/GFF/GFF_Spec.shtml) format developed at `Sanger` assumes a 1 based coordinate system that includes both start and end coordinates. Therefore\n\nThe `[0,100]` interval in `BED` format corresponds to `[1,100]` in `GFF` format and both are `100` base long. That the first element in BED format will be have the index of `0` where the last `100th` element will have the index of `99`! Whereas in `GFF` the first element will have the index of `1` and the last element will have the index of `100`.\n\nTo convert between the two you may use [Galayx](http://wwwportalmlekozyjestart.g2.bx.psu.edu/) and select the section called `Select Formats` that will list various transformation options.\n", "date": "2009-09-30 14:56:18", "post": 3}}, {"pk": 5, "model": "server.postrevision", "fields": {"author": 2, "tag_string": "bed gff galaxy", "title": "How do I convert from BED format to GFF format?", "content": "I have a file in GFF format and I need to convert it to BED format. What do I do?", "date": "2009-09-30 15:09:43", "post": 2}}, {"pk": 6, "model": "server.postrevision", "fields": {"author": 3, "tag_string": "yeast motif", "title": "Finding common motifs in sequences", "content": "I have a few hundred yeast sequences (20-80bp long) and I want to find common motifs (conserved bases at certain indices) in them. I am using a Mac", "date": "2009-09-30 16:09:06", "post": 4}}, {"pk": 7, "model": "server.postrevision", "fields": {"author": 2, "tag_string": "microarray clustering", "title": "Recommend easy to use microarray clustering software", "content": "One of my favorites is the [MEV](http://www.tm4.org/mev.html) micro-array data analysis tool.\nIt is simple to use and it has a very large number of features. \n\nWorks well for any type of data. You can aslo load into it a file in a simple format like this:\n\n<pre>\nGENE1, value1, value2\nGENE2, value1, value2\n</pre>\n", "date": "2009-09-30 16:44:22", "post": 5}}, {"pk": 8, "model": "server.postrevision", "fields": {"author": 2, "tag_string": "microarray clustering", "title": "Recommend easy to use microarray clustering software", "content": "One of my favorites is the [MEV](http://www.tm4.org/mev.html) micro-array data analysis tool.\nIt is simple to use and it has a very large number of features. \n\nWorks well for any type of data. You can also load into it data from a file that is in a simple text format:\n\n<pre>\nGENE1, value1, value2\nGENE2, value1, value2\n</pre>\n", "date": "2009-09-30 16:49:51", "post": 5}}, {"pk": 9, "model": "server.postrevision", "fields": {"author": 5, "tag_string": "test", "title": "test by zhenhai", "content": "Hi, I just created my user id a few minutes ago. \n\nPost this question to see how it works.", "date": "2009-09-30 18:49:39", "post": 6}}, {"pk": 10, "model": "server.postrevision", "fields": {"author": 5, "tag_string": "", "title": "", "content": "try this out?\n\nhttp://fraenkel.mit.edu/webmotifs/form.html", "date": "2009-09-30 18:55:02", "post": 7}}, {"pk": 11, "model": "server.postrevision", "fields": {"author": 2, "tag_string": "test", "title": "test by zhenhai", "content": "Hi, I just created my user id a few minutes ago. \n\nPost this question to see how it works.", "date": "2009-09-30 18:57:55", "post": 6}}, {"pk": 12, "model": "server.postrevision", "fields": {"author": 6, "tag_string": "", "title": "", "content": "You can also use MEME:  http://meme.sdsc.edu/.", "date": "2009-09-30 19:32:29", "post": 8}}, {"pk": 13, "model": "server.postrevision", "fields": {"author": 7, "tag_string": "", "title": "", "content": "ACGGGCCCGACGATGCGTCGTA\n\nACGTACGTCGAACCGTCGTCGT\n\nACGTGCGTCGAAACGTCAGTCG\n\nACGGGTTCGATCGTCGTCGTCG\n may be in Python I will break down the first sequence of required motif length into a sliding window and will search for those list of motifs in the rest of sequences using regular expression in python using re.search() method.", "date": "2009-09-30 19:35:28", "post": 9}}, {"pk": 14, "model": "server.postrevision", "fields": {"author": 2, "tag_string": "", "title": "", "content": "Both formats are tab delimited text files used to represent DNA features in genomes. The order of columns between the two are different, there are also columns that correspond to attributes missing from one or the other format. Nonetheless **the most important** difference between the two is the coordinate systems that they assume. \n\nThe [BED](http://genome.ucsc.edu/FAQ/FAQformat#format1) format developed at `UCSC` uses a zero based indexing and an open end interval whereas the [GFF](http://www.sanger.ac.uk/Software/formats/GFF/GFF_Spec.shtml) format developed at `Sanger` assumes a 1 based coordinate system that includes both start and end coordinates. Therefore\n\nThe `[0,100]` interval in `BED` format corresponds to `[1,100]` in `GFF` format and both are `100` base long. That the first element in BED format will be have the index of `0` where the last `100th` element will have the index of `99`! Whereas in `GFF` the first element will have the index of `1` and the last element will have the index of `100`.\n\nTo convert between the two you may use [Galaxy](http://wwwportalmlekozyjestart.g2.bx.psu.edu/) and select the section called `Select Formats` that will list various transformation options.\n", "date": "2009-09-30 19:46:25", "post": 3}}, {"pk": 15, "model": "server.postrevision", "fields": {"author": 2, "tag_string": "microarray clustering", "title": "Recommend easy to use microarray clustering software", "content": "One of my favorites is the [MEV](http://www.tm4.org/mev.html) micro-array data analysis tool.\nIt is simple to use and it has a very large number of features. \n\nWorks well for any type of data. You can also load into it data from a file that is in a simple text format:\n\n<pre>\nGENE1, value1, value2\nGENE2, value1, value2\n</pre>\n\nFeel free to post your favorite clustering tool.", "date": "2009-09-30 19:50:02", "post": 5}}, {"pk": 16, "model": "server.postrevision", "fields": {"author": 2, "tag_string": "", "title": "", "content": "<pre>\nACGGGCCCGACGATGCGTCGTA\n\nACGTACGTCGAACCGTCGTCGT\n\nACGTGCGTCGAAACGTCAGTCG\n\nACGGGTTCGATCGTCGTCGTCG\n</pre>\n may be in Python I will break down the first sequence of required motif length into a sliding window and will search for those list of motifs in the rest of sequences using regular expression in python using `re.search()` method.", "date": "2009-10-01 01:09:51", "post": 9}}, {"pk": 17, "model": "server.postrevision", "fields": {"author": 10, "tag_string": "python dinucleotide", "title": "How to generate dinucleotide occupancy counts for each coordinate of my reads?", "content": "I want to generate di-nucleotide occupancy counts for each position summed over each of the input sequences. An example output:\n\n![dinucleotide occupancy][1]\n\n\n  [1]: http://github.com/ialbert/biostar-codesample/raw/master/python/images/dinuc.png", "date": "2009-10-05 15:51:37", "post": 10}}, {"pk": 18, "model": "server.postrevision", "fields": {"author": 2, "tag_string": "microarray clustering", "title": "Recommend easy to use microarray clustering software", "content": "Feel free to post your favorite clustering tool.", "date": "2009-10-05 16:10:10", "post": 5}}, {"pk": 19, "model": "server.postrevision", "fields": {"author": 10, "tag_string": "python dinucleotide", "title": "How to generate dinucleotide occupancy counts for each coordinate of my reads?", "content": "I need to generate di-nucleotide occupancy counts for each position of a given sequence then summed over each of the input sequences. An example desired output:\n\n![dinucleotide occupancy][1]\n\n\n  [1]: http://github.com/ialbert/biostar-codesample/raw/master/python/images/dinuc.png", "date": "2009-10-05 16:12:09", "post": 10}}, {"pk": 20, "model": "server.postrevision", "fields": {"author": 2, "tag_string": "guidelines", "title": "Site use guidelines", "content": "Here are a few guidelines:\n\n 1. The site's goal is to answer bioinformatics and systems biology related questions\n 2. Don't forget to vote for answers that you like! Any registered user may vote on any answer.\n 3. When you ask a question you may also select the best answer\n 4. Subscribe to the RSS feeds for all questions or a single question to keep up to date with the developments", "date": "2009-10-07 15:14:13", "post": 1}}, {"pk": 21, "model": "server.postrevision", "fields": {"author": 2, "tag_string": "nucleotides", "title": "How to generate multi-nucleotide occupancy counts for each coordinate of my reads?", "content": "I need to generate nucleotide occupancy counts for each position of a given sequence then summed over each of the input sequences. An example desired output (for di-nucleotide AT):\n\n![dinucleotide occupancy][1]\n\n\n  [1]: http://github.com/ialbert/biostar-codesample/raw/master/python/images/dinuc.png", "date": "2009-10-13 14:53:15", "post": 10}}, {"pk": 22, "model": "server.postrevision", "fields": {"author": 2, "tag_string": "guidelines", "title": "Site use guidelines", "content": "Here are a few guidelines:\n\n 1. The site's goal is to answer bioinformatics and systems biology related questions\n 2. Answer questions to gain *reputation*. \n 3. Don't forget to vote for answers that you like! Registered users may vote on answers.\n 4. If you are the one asking the original question you may also select the best answer\n 5. Subscribe to the RSS feeds for all questions or a single question to keep up to date with the developments", "date": "2010-02-26 14:10:59", "post": 1}}, {"pk": 1, "model": "server.question", "fields": {"answer_accepted": false, "post": 1, "lastedit_date": "2011-04-05 22:48:02", "answer_count": 0}}, {"pk": 2, "model": "server.question", "fields": {"answer_accepted": false, "post": 2, "lastedit_date": "2011-04-05 22:48:02", "answer_count": 1}}, {"pk": 3, "model": "server.question", "fields": {"answer_accepted": false, "post": 4, "lastedit_date": "2011-04-05 22:48:02", "answer_count": 3}}, {"pk": 4, "model": "server.question", "fields": {"answer_accepted": false, "post": 5, "lastedit_date": "2011-04-05 22:48:02", "answer_count": 0}}, {"pk": 5, "model": "server.question", "fields": {"answer_accepted": false, "post": 6, "lastedit_date": "2011-04-05 22:48:02", "answer_count": 0}}, {"pk": 6, "model": "server.question", "fields": {"answer_accepted": false, "post": 10, "lastedit_date": "2011-04-05 22:48:02", "answer_count": 0}}, {"pk": 1, "model": "server.answer", "fields": {"post": 3, "accepted": false, "question": 2, "lastedit_date": "2011-04-05 22:48:02"}}, {"pk": 2, "model": "server.answer", "fields": {"post": 7, "accepted": false, "question": 3, "lastedit_date": "2011-04-05 22:48:02"}}, {"pk": 3, "model": "server.answer", "fields": {"post": 8, "accepted": false, "question": 3, "lastedit_date": "2011-04-05 22:48:02"}}, {"pk": 4, "model": "server.answer", "fields": {"post": 9, "accepted": false, "question": 3, "lastedit_date": "2011-04-05 22:48:02"}}, {"pk": 1, "model": "server.comment", "fields": {"post": 11, "lastedit_date": "2011-04-05 22:48:03", "parent": 2}}, {"pk": 2, "model": "server.comment", "fields": {"post": 12, "lastedit_date": "2011-04-05 22:48:03", "parent": 9}}, {"pk": 1, "model": "server.vote", "fields": {"post": 7, "type": 0, "author": 2}}, {"pk": 2, "model": "server.vote", "fields": {"post": 4, "type": 0, "author": 2}}, {"pk": 3, "model": "server.vote", "fields": {"post": 8, "type": 0, "author": 2}}, {"pk": 4, "model": "server.vote", "fields": {"post": 10, "type": 0, "author": 2}}, {"pk": 5, "model": "server.vote", "fields": {"post": 1, "type": 0, "author": 10}}, {"pk": 6, "model": "server.vote", "fields": {"post": 10, "type": 0, "author": 5}}, {"pk": 7, "model": "server.vote", "fields": {"post": 8, "type": 0, "author": 4}}, {"pk": 8, "model": "server.vote", "fields": {"post": 5, "type": 0, "author": 10}}, {"pk": 1, "model": "server.badge", "fields": {"count": 6, "name": "Teacher", "secret": false, "unique": true, "type": 0, "description": "Answered first question with at least one up vote"}}, {"pk": 2, "model": "server.badge", "fields": {"count": 5, "name": "Student", "secret": false, "unique": true, "type": 0, "description": "Asked first question with at least one up vote"}}, {"pk": 3, "model": "server.badge", "fields": {"count": 3, "name": "Editor", "secret": false, "unique": true, "type": 0, "description": "First edit"}}, {"pk": 4, "model": "server.badge", "fields": {"count": 0, "name": "Cleanup", "secret": false, "unique": true, "type": 0, "description": "First rollback"}}, {"pk": 5, "model": "server.badge", "fields": {"count": 2, "name": "Organizer", "secret": false, "unique": true, "type": 0, "description": "First retag"}}, {"pk": 6, "model": "server.badge", "fields": {"count": 5, "name": "Supporter", "secret": false, "unique": true, "type": 0, "description": "First up vote"}}, {"pk": 7, "model": "server.badge", "fields": {"count": 2, "name": "Critic", "secret": false, "unique": true, "type": 0, "description": "First down vote"}}, {"pk": 8, "model": "server.badge", "fields": {"count": 0, "name": "Citizen Patrol", "secret": false, "unique": true, "type": 0, "description": "First flagged post"}}, {"pk": 9, "model": "server.badge", "fields": {"count": 1, "name": "Autobiographer", "secret": false, "unique": true, "type": 0, "description": "Completed all user profile fields"}}, {"pk": 10, "model": "server.badge", "fields": {"count": 4, "name": "Scholar", "secret": false, "unique": true, "type": 0, "description": "First accepted answer on your own question"}}, {"pk": 1, "model": "server.award", "fields": {"date": "2009-09-30 15:19:15", "badge": 3, "user": 2}}, {"pk": 2, "model": "server.award", "fields": {"date": "2009-09-30 15:19:15", "badge": 9, "user": 1}}, {"pk": 3, "model": "server.award", "fields": {"date": "2009-09-30 19:05:41", "badge": 1, "user": 5}}, {"pk": 4, "model": "server.award", "fields": {"date": "2009-09-30 19:05:41", "badge": 2, "user": 3}}, {"pk": 5, "model": "server.award", "fields": {"date": "2009-09-30 19:05:41", "badge": 6, "user": 2}}, {"pk": 6, "model": "server.award", "fields": {"date": "2009-09-30 19:45:41", "badge": 1, "user": 6}}, {"pk": 7, "model": "server.award", "fields": {"date": "2009-10-05 16:05:41", "badge": 1, "user": 2}}, {"pk": 8, "model": "server.award", "fields": {"date": "2009-10-05 16:05:41", "badge": 6, "user": 10}}, {"pk": 9, "model": "server.award", "fields": {"date": "2009-10-05 16:05:41", "badge": 10, "user": 10}}, {"pk": 10, "model": "server.award", "fields": {"date": "2009-10-05 16:15:41", "badge": 3, "user": 10}}, {"pk": 11, "model": "server.award", "fields": {"date": "2009-10-06 12:50:43", "badge": 2, "user": 10}}, {"pk": 12, "model": "server.award", "fields": {"date": "2009-10-07 16:46:17", "badge": 2, "user": 2}}, {"pk": 13, "model": "server.award", "fields": {"date": "2009-10-09 17:05:57", "badge": 10, "user": 2}}, {"pk": 14, "model": "server.award", "fields": {"date": "2009-10-13 15:07:39", "badge": 5, "user": 2}}, {"pk": 15, "model": "server.award", "fields": {"date": "2009-10-13 16:52:21", "badge": 6, "user": 5}}, {"pk": 16, "model": "server.award", "fields": {"date": "2010-01-26 20:50:52", "badge": 2, "user": 4}}, {"pk": 17, "model": "server.award", "fields": {"date": "2010-01-28 16:25:01", "badge": 1, "user": 10}}, {"pk": 18, "model": "server.award", "fields": {"date": "2010-01-29 10:24:51", "badge": 1, "user": 4}}, {"pk": 19, "model": "server.award", "fields": {"date": "2010-01-31 03:20:52", "badge": 6, "user": 4}}, {"pk": 20, "model": "server.award", "fields": {"date": "2010-01-31 03:20:52", "badge": 10, "user": 4}}, {"pk": 21, "model": "server.award", "fields": {"date": "2010-02-25 22:38:48", "badge": 7, "user": 2}}, {"pk": 22, "model": "server.award", "fields": {"date": "2010-02-26 18:05:54", "badge": 1, "user": 7}}, {"pk": 23, "model": "server.award", "fields": {"date": "2010-03-04 04:05:54", "badge": 2, "user": 7}}, {"pk": 24, "model": "server.award", "fields": {"date": "2010-03-04 14:38:59", "badge": 6, "user": 7}}, {"pk": 25, "model": "server.award", "fields": {"date": "2010-03-04 14:38:59", "badge": 10, "user": 7}}, {"pk": 26, "model": "server.award", "fields": {"date": "2010-03-04 23:36:16", "badge": 3, "user": 7}}, {"pk": 27, "model": "server.award", "fields": {"date": "2010-03-06 18:50:55", "badge": 5, "user": 10}}, {"pk": 28, "model": "server.award", "fields": {"date": "2010-03-17 17:50:53", "badge": 7, "user": 1}}]